apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: echo-dep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      annotations:
        injector.tyk.io/inject: "true"
        injector.tyk.io/route: "/echo-svc"
      labels:
        # App label is required for a deployment to function
        app: echo
    spec:
      containers:
        - name: echo
          image: jmalloc/echo-server
          ports:
            # All meshed applications must listen on port 80
            - containerPort: 80
          env:
            - name: PORT
              value: "80"
---
apiVersion: v1
kind: Service
metadata:
  # The service name should match the app name
  name: echo
  annotations:
    injector.tyk.io/inject: "true"
spec:
  ports:
    - port: 80
      # The sidecar will listen on port 8080, so ensure that the service points there
      # TODO: there is a service mutator, investigate why it is not working
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: echo
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: echo-ingress
  annotations:
    kubernetes.io/ingress.class: tyk
spec:
  rules:
    # Ensure that the hostname and path combination are unique
    - host: petstore42.tyk.technology
      http:
        paths:
          - path: /
            backend:
              serviceName: echo
              servicePort: 80